reminder:

list of top level functions designed to alter nca data in order of (possible) usage:
    
    out of dump loop:
        * ncaSetDownloadDistributionType (instead of always using it like legacy, offer it as an option)
        
        * ncaRemoveTitlekeyCrypto (can be used with digital titles + game updates in gamecards)
        
        * cnmtGenerateNcaPatch (Meta)
            * calls pfsGenerateEntryPatch
                * calls ncaGenerateHierarchicalSha256Patch
        
        * programInfoGenerateNcaPatch (Program)
            * calls npdmChangeAcidPublicKeyAndNcaSignature
                * calls pfsGenerateEntryPatch
                    * calls ncaGenerateHierarchicalSha256Patch
        
        * nacpGenerateNcaPatch (Control)
            * calls romfsGenerateFileEntryPatch
                * calls ncaGenerateHierarchicalSha256Patch / ncaGenerateHierarchicalIntegrityPatch
            * nacpIsNcaPatchRequired is used to check if a nacp patch was applied
            * missing wrapper for romfsWriteFileEntryPatchToMemoryBuffer !!!
            * missing functions for nacp mods !!!
        
        * ncaEncryptHeader (doesn't modify anything per se, but it's used to generate new encrypted header data if needed)
    
    inside dump loop:
        * ncaIsHeaderDirty (doesn't modify anything per se, but it's used to check if any of the functions above has been used, basically - and by extension, if the functions below need to be used)
        
        * ncaWriteEncryptedHeaderDataToMemoryBuffer (write encrypted nca header data)
        
        * cnmtUpdateContentInfo (used to update content entry info in the raw cnmt copy after dumping each one)
        
        * cnmtWriteNcaPatch (writes cnmt patch)
            * calls pfsWriteEntryPatchToMemoryBuffer
                * calls ncaWriteHierarchicalSha256PatchToMemoryBuffer
        
        * programInfoWriteNcaPatch (writes ndpm patch)
            * calls npdmWriteNcaPatch
                * calls pfsWriteEntryPatchToMemoryBuffer
                    * calls ncaWriteHierarchicalSha256PatchToMemoryBuffer
        
        * pfsWriteEntryPatchToMemoryBuffer
            * calls ncaWriteHierarchicalSha256PatchToMemoryBuffer
        
        * romfsWriteFileEntryPatchToMemoryBuffer
            * calls ncaWriteHierarchicalSha256PatchToMemoryBuffer / ncaWriteHierarchicalIntegrityPatchToMemoryBuffer
            * missing nacp wrapper

minor steps to take into account:
    
    * check if rights_id_available == true and titlekey_retrieved == false (preload handling)









todo:
    
    nca: support for compressed fs sections?
    nca: support for sparse sections?
    
    tik: automatically dump tickets to the SD card?
    tik: use dumped tickets when the original ones can't be found in the ES savefile?
    
    gamecard: functions to display filelist
    
    pfs0: functions to display filelist
    pfs0: full header aligned to 0x20 (nsp)
    
    romfs: functions to display filelist
    
    bktr: functions to display filelist (wrappers for romfs functions tbh)
    
    title: fix titleinfo issue
    title: more functions for title lookup? (filters, patches / aoc, etc.)
    title: more functions for content lookup? (based on id)
    title: parse the update partition from gamecards (if available) to generate ncmcontentinfo data for all update titles
    
    